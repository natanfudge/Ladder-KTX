import net.fabricmc.loom.LoomGradleExtension

plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}



repositories {
    maven { url = "http://maven.fabricmc.net/" }
}


def kaptConfig = configurations.getByName("kapt")
kaptConfig.extendsFrom(configurations.minecraftNamed)
kaptConfig.extendsFrom(configurations.modCompileClasspathMapped)
kaptConfig.extendsFrom(configurations.mappingsFinal)

def loomExt = extensions.getByType(LoomGradleExtension)
def javaTask = tasks.getByName("compileJava")

kapt {
    arguments {
        arg("inMapFileNamedIntermediary", loomExt.getMappingsProvider().tinyMappings.getCanonicalPath())
        arg("outMapFileNamedIntermediary", loomExt.getMappingsProvider().mappingsMixinExport.getCanonicalPath())
        arg("outRefMapFile", new File(javaTask.getDestinationDir(), loomExt.getRefmapName()).getCanonicalPath())
        arg("defaultObfuscationEnv", "named:intermediary")
    }
    includeCompileClasspath = false
}


dependencies {
    kapt "net.fabricmc:sponge-mixin:0.8+build.18"
    kapt "net.fabricmc:fabric-mixin-compile-extensions:0.3.0.4"
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
//    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"


    implementation "com.google.auto.service:auto-service:1.0-rc7"
    kapt "com.google.auto.service:auto-service:1.0-rc7"




}

processResources {

    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"